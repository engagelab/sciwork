<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="getMenu.send()">
	
	<fx:Declarations>
		<!-- retrieve list of menu items -->
		<s:HTTPService url="http://localhost:4567/menu" method="GET" result="getMenu_resultHandler(event)" fault="getMenu_faultHandler(event)" resultFormat="text" id="getMenu" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import listeners.SceneChangeEvent;
			import listeners.TaskChangeEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			/**
			 * 
			 * Static menu definition 
			 * 
			 **/
			/*private static const tabs:ArrayCollection = new ArrayCollection([
				{label: "week 1", tasks: new ArrayCollection(["task 1", "task 2", "task 3"])},
				{label: "week 2", tasks: new ArrayCollection(["task 4", "task 5", "task 6"])},
				{label: "week 3", tasks: new ArrayCollection(["task 7", "task 8", "task 9"])},
				{label: "week 4", tasks: new ArrayCollection(["task 10", "task 11", "task 12"])},
				{label: "week 5", tasks: new ArrayCollection(["task 13", "task 14", "task 15"])},
				{label: "week 6", tasks: new ArrayCollection(["task 16", "task 17", "task 18"])},
				{label: "week 7", tasks: new ArrayCollection(["task 19", "task 20", "task 21"])},
				{label: "week 8", tasks: new ArrayCollection(["task 22", "task 23", "task 24"])}
			]);*/
			
			[Bindable] private var tabs:ArrayCollection;
			
			/**
			 * 
			 * Handle scene change 
			 * 
			 **/
			protected function sceneBar_changeHandler(event:IndexChangeEvent):void {
				var sce:SceneChangeEvent = new SceneChangeEvent(resourceManager.getString('resources', 'SCENE_CHANGED'), true);
				sce.sceneId = (sceneBar.selectedItem as Object).label;
				dispatchEvent(sce);
			}
			
			/**
			 * 
			 * Handle task change 
			 * 
			 **/
			protected function taskBar_changeHandler(event:IndexChangeEvent):void {
				var tce:TaskChangeEvent = new TaskChangeEvent(resourceManager.getString('resources', 'TASK_CHANGED'), true);
				tce.taskId = taskBar.selectedItem;
				dispatchEvent(tce);
			}
			
			/**
			 * 
			 * Error handling method for getMenu service
			 * 
			 **/
			protected function getMenu_faultHandler(event:FaultEvent):void {
				Alert.show("An error occured while retrieving menu items from the server.", "Menu service error");
			}
			
			/**
			 *
			 * Result handling method for getMenu service 
			 * 
			 **/
			protected function getMenu_resultHandler(event:ResultEvent):void {
				//store the returned object as JSON 
				var res:Object = com.adobe.serialization.json.JSON.decode(String(event.result));
				
				tabs = new ArrayCollection();
				var tasks:ArrayCollection;
				
				//loop through all the scenes object
				for each (var scene:Object in res) {
					tasks = new ArrayCollection();
					//loop through all the tasks for current scene
					for each (var task:Object in scene.tasks as Array) {
						tasks.addItem({label: task.label, taskId: task.taskId});
					}
					tabs.addItem({label: scene.label, sceneId: scene.sceneId, tasks: tasks});
				}			
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%">
		<s:ButtonBar id="sceneBar" width="100%" requireSelection="true" dataProvider="{tabs}" change="sceneBar_changeHandler(event)"/>
		<s:ButtonBar id="taskBar" requireSelection="true" dataProvider="{(tabs.getItemAt(sceneBar.selectedIndex)).tasks as ArrayCollection}" change="taskBar_changeHandler(event)"/>
	</s:VGroup>
	
</s:Group>