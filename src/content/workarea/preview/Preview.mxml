<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:preview="content.workarea.preview.*" creationComplete="initPreview(event)" xmlns:components="components.*" gap="0">
	
	<fx:Declarations>
		<fx:String id="taskType" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import listeners.MaterialToPreviewEvent;
			
			import mx.events.FlexEvent;
			
			private var _previewType:String;
			private var _previewSource:String;
			private var _fullSizeSource:String;
			
			protected function initPreview(event:FlexEvent):void
			{
				// this.addEventListener(resourceManager.getString('resources', 'SERVER_URL'), handleMaterialRequest);
			}
			
			public function previewMaterial(previewType:String, fullSizeSource:String, previewSource:String):void
			{
				_previewType = previewType;
				_fullSizeSource = fullSizeSource;
				_previewSource = previewSource;
				videoViewer.player.pauseVideo();
				switch(previewType)
				{
					case "image":
						imageViewer.setupPreview(previewType, fullSizeSource);
						this.currentState = "imageState";
						break;
					case "video" :
						// YouTube image thumbnail look slike this:   http://img.youtube.com/vi/xxxxxxxxxxx/1.jpg
						// Size is 120x90
						videoViewer.setupPreview(previewType, fullSizeSource);
						this.currentState = "videoState";
						break;
					case "text":
						this.currentState = "keywordsState";
						break;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default" />
		<s:State name="videoState" />
		<s:State name="imageState" />
		<s:State name="keywordsState" />
		<s:State name="articleState" />
	</s:states>
	
	<components:SelectionHeader id="selectionheader" width="100%" height="30" excludeFrom="keywordsState" />
	<s:BorderContainer width="100%" height="100%" borderWeight="1" borderAlpha=".3" borderWeight.keywordsState="2">
		<s:Rect id="backgroundRect" left="0" right="0" top="0" bottom="0" excludeFrom="keywordsState, default">
			<s:fill>
				<s:LinearGradient rotation="135">
					<s:GradientEntry color="#CCCCCC" />
					<s:GradientEntry color="#000000" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<preview:VideoViewer width="100%" height="100%" id="videoViewer" visible="false" visible.videoState="true" visible.articleState="false" visible.imageState="false" visible.keywordsState="false" />
		<preview:ImageViewer width="100%" height="100%" id="imageViewer" visible="false" visible.videoState="false" visible.articleState="false" visible.imageState="true" visible.keywordsState="false" />
		<preview:KeywordsViewer width="100%" height="100%" id="keywordsViewer" visible="false" visible.videoState="false" visible.articleState="false" visible.imageState="false" visible.keywordsState="true"/>
		<preview:ArticleUploader width="100%" height="100%" id="articleUploader" visible="false" visible.videoState="false" visible.articleState="true" visible.imageState="false" visible.keywordsState="false"/>
		<preview:Comments id="comments"/>
		<s:Button id="sender" right="0" top="0" height="40" width="100" label="LEVER" buttonMode="true" skinClass="skins.keywordSendButtonSkin" excludeFrom="keywordsState, default" />
	</s:BorderContainer>	

</s:VGroup>
